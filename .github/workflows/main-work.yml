name: Package

on:
  push:
    tags: v*
  workflow_dispatch:

jobs:
  build:
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            platform: 'linux'
            arch: 'x64'

    runs-on: ${{ matrix.os }}
    env:
      NODE_OPTIONS: --max-old-space-size=4096
      TARGET_ARCH: ${{ matrix.arch }}

    permissions:
      contents: write

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install pnpm globally
        run: npm install -g pnpm

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22.x

      - name: Verify pnpm
        run: pnpm --version

      - name: Install dependencies
        run: pnpm install --no-frozen-lockfile

      - name: Set environment (optional)
        if: matrix.platform == 'linux'
        run: |
          echo "APPLEID=${{ secrets.APPLEID }}" >> $GITHUB_ENV
          echo "APPLEIDPASS=${{ secrets.APPLEIDPASS }}" >> $GITHUB_ENV
          echo "CSC_LINK=${{ secrets.CERTIFICATE_OSX_APPLICATION }}" >> $GITHUB_ENV
          echo "CSC_KEY_PASSWORD=${{ secrets.CERTIFICATE_PASSWORD }}" >> $GITHUB_ENV
          echo "APPLETEAMID=${{ secrets.APPLETEAMID }}" >> $GITHUB_ENV

      - name: Build Windows
        run: npm run build:win:x64

      - name: List dist files
        run: ls -R dist

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: electron-build-${{ matrix.platform }}-${{ matrix.arch }}
          path: dist/

      - name: Upload to GitHub Release (if tag exists)
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v1
        with:
          draft: false
          prerelease: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
