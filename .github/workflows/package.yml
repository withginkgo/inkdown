name: Package

on:
  push:
    tags: v*
  workflow_dispatch:

jobs:
  build:
    strategy:
      matrix:
        include:
          - os: linux-latest
            platform: 'linux'
            arch: 'x64'

    runs-on: ${{ matrix.os }}
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      NODE_OPTIONS: --max-old-space-size=4096
      TARGET_ARCH: ${{ matrix.arch }}

    permissions:
      contents: write

    steps:
      - name: Checkout
        uses: actions/checkout@v3

        - name: Install pnpm globally
        run: npm install -g pnpm

      - name: Setup Node.js environment
        uses: actions/setup-node@v4
        with:
          node-version: 22.x

      - name: Verify pnpm installation
        run: pnpm --version

      - name: Install dependencies
        run: pnpm install --no-frozen-lockfile

      - name: Set env for linux
        if: matrix.platform == 'linux'
        run: |
          echo "APPLEID=${{ secrets.APPLEID }}" >> $GITHUB_ENV
          echo "APPLEIDPASS=${{ secrets.APPLEIDPASS }}" >> $GITHUB_ENV
          echo "CSC_LINK=${{ secrets.CERTIFICATE_OSX_APPLICATION }}" >> $GITHUB_ENV
          echo "CSC_KEY_PASSWORD=${{ secrets.CERTIFICATE_PASSWORD }}" >> $GITHUB_ENV
          echo "APPLETEAMID=${{ secrets.APPLETEAMID }}" >> $GITHUB_ENV

      - name: Electron-Win-x64
        if: matrix.platform == 'linux' && matrix.arch == 'x64'
        run: |
          npm run build:linux:x64

      - name: List dist files
        run: ls -R dist

      - name: GH Release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          draft: false
          prerelease: true
